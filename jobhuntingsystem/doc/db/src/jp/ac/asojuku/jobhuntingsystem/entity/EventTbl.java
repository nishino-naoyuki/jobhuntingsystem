package jp.ac.asojuku.jobhuntingsystem.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * イベントテーブル モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class EventTbl implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** name. */
	private String name;

	/** event_id. */
	private Integer eventId;

	/** ステップテーブル. */
	private StepTbl stepTbl;

	/** document. */
	private String document;

	/** start_datetime. */
	private Date startDatetime;

	/** end_datetime. */
	private Date endDatetime;

	/** 企業テーブル. */
	private CompanyTbl companyTbl;

	/** place. */
	private String place;

	/** 採用求人テーブル. */
	private RecruitmentTbl recruitmentTbl;

	/** recruit_startdatetime. */
	private Date recruitStartdatetime;

	/** recruit_enddatetime. */
	private Date recruitEnddatetime;

	/** overview. */
	private String overview;

	/** 就職活動テーブル 一覧. */
	private Set<JobHuntingTbl> jobHuntingTblSet;

	/**
	 * コンストラクタ.
	 */
	public EventTbl() {
		this.jobHuntingTblSet = new HashSet<JobHuntingTbl>();
	}

	/**
	 * name を設定します.
	 * 
	 * @param name
	 *            name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * name を取得します.
	 * 
	 * @return name
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * event_id を設定します.
	 * 
	 * @param eventId
	 *            event_id
	 */
	public void setEventId(Integer eventId) {
		this.eventId = eventId;
	}

	/**
	 * event_id を取得します.
	 * 
	 * @return event_id
	 */
	public Integer getEventId() {
		return this.eventId;
	}

	/**
	 * ステップテーブル を設定します.
	 * 
	 * @param stepTbl
	 *            ステップテーブル
	 */
	public void setStepTbl(StepTbl stepTbl) {
		this.stepTbl = stepTbl;
	}

	/**
	 * ステップテーブル を取得します.
	 * 
	 * @return ステップテーブル
	 */
	public StepTbl getStepTbl() {
		return this.stepTbl;
	}

	/**
	 * document を設定します.
	 * 
	 * @param document
	 *            document
	 */
	public void setDocument(String document) {
		this.document = document;
	}

	/**
	 * document を取得します.
	 * 
	 * @return document
	 */
	public String getDocument() {
		return this.document;
	}

	/**
	 * start_datetime を設定します.
	 * 
	 * @param startDatetime
	 *            start_datetime
	 */
	public void setStartDatetime(Date startDatetime) {
		this.startDatetime = startDatetime;
	}

	/**
	 * start_datetime を取得します.
	 * 
	 * @return start_datetime
	 */
	public Date getStartDatetime() {
		return this.startDatetime;
	}

	/**
	 * end_datetime を設定します.
	 * 
	 * @param endDatetime
	 *            end_datetime
	 */
	public void setEndDatetime(Date endDatetime) {
		this.endDatetime = endDatetime;
	}

	/**
	 * end_datetime を取得します.
	 * 
	 * @return end_datetime
	 */
	public Date getEndDatetime() {
		return this.endDatetime;
	}

	/**
	 * 企業テーブル を設定します.
	 * 
	 * @param companyTbl
	 *            企業テーブル
	 */
	public void setCompanyTbl(CompanyTbl companyTbl) {
		this.companyTbl = companyTbl;
	}

	/**
	 * 企業テーブル を取得します.
	 * 
	 * @return 企業テーブル
	 */
	public CompanyTbl getCompanyTbl() {
		return this.companyTbl;
	}

	/**
	 * place を設定します.
	 * 
	 * @param place
	 *            place
	 */
	public void setPlace(String place) {
		this.place = place;
	}

	/**
	 * place を取得します.
	 * 
	 * @return place
	 */
	public String getPlace() {
		return this.place;
	}

	/**
	 * 採用求人テーブル を設定します.
	 * 
	 * @param recruitmentTbl
	 *            採用求人テーブル
	 */
	public void setRecruitmentTbl(RecruitmentTbl recruitmentTbl) {
		this.recruitmentTbl = recruitmentTbl;
	}

	/**
	 * 採用求人テーブル を取得します.
	 * 
	 * @return 採用求人テーブル
	 */
	public RecruitmentTbl getRecruitmentTbl() {
		return this.recruitmentTbl;
	}

	/**
	 * recruit_startdatetime を設定します.
	 * 
	 * @param recruitStartdatetime
	 *            recruit_startdatetime
	 */
	public void setRecruitStartdatetime(Date recruitStartdatetime) {
		this.recruitStartdatetime = recruitStartdatetime;
	}

	/**
	 * recruit_startdatetime を取得します.
	 * 
	 * @return recruit_startdatetime
	 */
	public Date getRecruitStartdatetime() {
		return this.recruitStartdatetime;
	}

	/**
	 * recruit_enddatetime を設定します.
	 * 
	 * @param recruitEnddatetime
	 *            recruit_enddatetime
	 */
	public void setRecruitEnddatetime(Date recruitEnddatetime) {
		this.recruitEnddatetime = recruitEnddatetime;
	}

	/**
	 * recruit_enddatetime を取得します.
	 * 
	 * @return recruit_enddatetime
	 */
	public Date getRecruitEnddatetime() {
		return this.recruitEnddatetime;
	}

	/**
	 * overview を設定します.
	 * 
	 * @param overview
	 *            overview
	 */
	public void setOverview(String overview) {
		this.overview = overview;
	}

	/**
	 * overview を取得します.
	 * 
	 * @return overview
	 */
	public String getOverview() {
		return this.overview;
	}

	/**
	 * 就職活動テーブル 一覧を設定します.
	 * 
	 * @param jobHuntingTblSet
	 *            就職活動テーブル 一覧
	 */
	public void setJobHuntingTblSet(Set<JobHuntingTbl> jobHuntingTblSet) {
		this.jobHuntingTblSet = jobHuntingTblSet;
	}

	/**
	 * 就職活動テーブル を追加します.
	 * 
	 * @param jobHuntingTbl
	 *            就職活動テーブル
	 */
	public void addJobHuntingTbl(JobHuntingTbl jobHuntingTbl) {
		this.jobHuntingTblSet.add(jobHuntingTbl);
	}

	/**
	 * 就職活動テーブル 一覧を取得します.
	 * 
	 * @return 就職活動テーブル 一覧
	 */
	public Set<JobHuntingTbl> getJobHuntingTblSet() {
		return this.jobHuntingTblSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((eventId == null) ? 0 : eventId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		EventTbl other = (EventTbl) obj;
		if (eventId == null) {
			if (other.eventId != null) {
				return false;
			}
		} else if (!eventId.equals(other.eventId)) {
			return false;
		}
		return true;
	}

}
